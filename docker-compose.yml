version: '3.8'

services:
  # Development service
  radio-boluoba-dev:
    build:
      context: .
      target: development
    container_name: radio-boluoba-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - radio-boluoba-data-dev:/app/data
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_PATH=/app/data/database.db
    restart: unless-stopped
    networks:
      - radio-boluoba-network
    profiles:
      - dev

  # Production service
  radio-boluoba-prod:
    build:
      context: .
      target: production
    container_name: radio-boluoba-prod
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - DATABASE_URL=postgresql://radio_user:radio_password@postgres:5432/radio_db
      - ALLOWED_ORIGINS=*
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - radio-boluoba-network
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: radio-boluoba-postgres
    environment:
      POSTGRES_DB: radio_db
      POSTGRES_USER: radio_user
      POSTGRES_PASSWORD: radio_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: always
    networks:
      - radio-boluoba-network
    profiles:
      - prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U radio_user -d radio_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: radio-boluoba-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      radio-boluoba-prod:
        condition: service_healthy
    networks:
      - radio-boluoba-network
    profiles:
      - prod
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  radio-boluoba-data-dev:
    driver: local
  postgres-data:
    driver: local
  nginx-cache:
    driver: local

networks:
  radio-boluoba-network:
    driver: bridge
